----USO DE TABLAS CON COMANDO DDL
----DDL : LENGUAJE DE MANIPULACION DE DATOS
----CREAR UNA NUEVA BASE DE DATOS
----DEBEMOS PRIMERO ESTAR EN LA BASE MASTER
----CREANDO POR DEFECTO LA BASE DE DATOS

CREATE DATABASE SUPER_TIENDA
GO

----VERIFICANDO LA EXISTENCIA DE LA BASE DE DATOS
----USANDO EL PROCEDIMIENTO ALMACENADO DE SISTEMA
SP_HELPDB

---VERIFICANDO LA ESTRUCTURA DE LA BASE DE DATOS CREADA
SP_HELPDB SUPER_TIENDA
GO

---HACIENDO ACTIVA LA NUEVA BASE DE DATOS
USE SUPER_TIENDA
GO

----CREANDO LA TABLA PRODUCTO DENTRO DE LA BASE DE DATOS SUPER_TIENDA
CREATE TABLE PRODUCTO
(
ID_PRODUCTO  CHAR(6)   NOT NULL,
DESCRIPCION  VARCHAR(45) NOT NULL,
PRECIO_VENTA  MONEY    NOT NULL,
STOCK_MINIMO  INT     NULL,
STOCK_MAXIMO  INT     NULL,
FECHA_VENC   DATE     NULL,
PRIMARY KEY (ID_PRODUCTO)
)
GO

---MOSTRAR LA LISTA DE LOS TIPOS DE DATOS QUE ALMACENA SQL SERVER
SELECT NAME FROM systypes

---CONSULTA TODAS LAS TABLAS EXISTENTES DENTRO DE UNA BASE DE DATOS
SELECT NAME FROM sysobjects where type='U'

---MOSTAR INFORMACION ESPECIFICA DE LA ESTRUCTURA DE LA TABLA
SELECT * FROM information_schema.columns WHERE table_name = 'PRODUCTO'
GO

---AGREGANDO MAS CAMPOS A LA TABLA PRODCUTO
---UTILIZANDO ALTER TABLE
ALTER TABLE PRODUCTO
ADD STOCK_ACTUAL INT NOT NULL
GO

---MOSTAR INFORMACION ESPECIFICA DE LA ESTRUCTURA DE LA TABLA
SELECT * FROM information_schema.columns WHERE table_name = 'PRODUCTO'
GO

---AGREGANDO VARIOS CAMPOS A LA TABLA PRODUCTO
ALTER TABLE PRODUCTO
ADD 
PRECIO_COSTO  MONEY     NOT NULL,
UNI_MEDIDA   VARCHAR(25)  NOT NULL,
COD_CATEGORIA CHAR(3)    NOT NULL
GO

---CREANDO UNA NUEVA TABLA LLAMADA : CATEGORIA
IF OBJECT_ID('CATEGORIA') IS NOT NULL
BEGIN  
  DROP TABLE CATEGORIA
END
GO

CREATE TABLE CATEGORIA
(
COD_CATEGORIA  CHAR(3)   NOT NULL,
NOMBRE     VARCHAR(25) NOT NULL
)
GO

---CONSULTA TODAS LAS TABLAS EXISTENTES DENTRO DE UNA BASE DE DATOS
SELECT NAME FROM sysobjects where type='U'

---MOSTAR INFORMACION ESPECIFICA DE LA ESTRUCTURA DE LA TABLA
SELECT * FROM information_schema.columns WHERE table_name = 'CATEGORIA'
GO

----MODIFICANDO LA TABLA CATEGORIA 
----AGREGAR UNA CLAVE PRIMARIA ( PRIMARY KEY)
ALTER TABLE CATEGORIA
ADD PRIMARY KEY(COD_CATEGORIA)
GO

----PARA SABER CUAL ES EL PRIMARY KEY DE LA TABLA "CATEGORIA"
DECLARE @table_name nvarchar(20)
SET @table_name = 'CATEGORIA'

SELECT [name]
FROM syscolumns 
WHERE [id] IN (
  SELECT [id] FROM sysobjects 
  WHERE [name] = @table_name )
  AND colid IN (
  SELECT SIK.colid 
  FROM sysindexkeys SIK JOIN sysobjects SO ON SIK.[id] = SO.[id]
  WHERE SIK.indid = 1 AND SO.[name] = @table_name )


  ----PARA SABER CUAL ES EL PRIMARY KEY DE LA TABLA "PRODUCTO"
DECLARE @table_name nvarchar(20)
SET @table_name = 'PRODUCTO'

SELECT [name]
FROM syscolumns 
WHERE [id] IN (
  SELECT [id] FROM sysobjects 
  WHERE [name] = @table_name )
  AND colid IN (
  SELECT SIK.colid 
  FROM sysindexkeys SIK JOIN sysobjects SO ON SIK.[id] = SO.[id]
  WHERE SIK.indid = 1 AND SO.[name] = @table_name )

  ---CREANDO UNA NUEVA TABLA LLAMADA : DETALLE_BOLETA
IF OBJECT_ID('DETALLE_BOLETA') IS NOT NULL
BEGIN  
  DROP TABLE DETALLE_BOLETA
END
GO

CREATE TABLE DETALLE_BOLETA
(
NUM_BOLETA   CHAR(8)   NOT NULL,
ID_PRODUCTO   CHAR(6)   NOT NULL,
CANTIDAD    INT     NOT NULL,
IMPORTE     MONEY    NOT NULL
)
GO

----CONSULTANDO POR LA PRIMARY KEY DE LA TABLA DETALLE_BOLETA
DECLARE @table_name nvarchar(20)
SET @table_name = 'DETALLE_BOLETA'

SELECT [name]
FROM syscolumns 
WHERE [id] IN (
  SELECT [id] FROM sysobjects 
  WHERE [name] = @table_name )
  AND colid IN (
  SELECT SIK.colid 
  FROM sysindexkeys SIK JOIN sysobjects SO ON SIK.[id] = SO.[id]
  WHERE SIK.indid = 1 AND SO.[name] = @table_name )

  ----AGREGAR UNA LLAVE PRIMARIA COMPUESTA
ALTER TABLE DETALLE_BOLETA
ADD PRIMARY KEY (NUM_BOLETA,ID_PRODUCTO)
GO

----CONSULTANDO POR LA PRIMARY KEY DE LA TABLA DETALLE_BOLETA
DECLARE @table_name nvarchar(20)
SET @table_name = 'DETALLE_BOLETA'

SELECT [name]
FROM syscolumns 
WHERE [id] IN (
  SELECT [id] FROM sysobjects 
  WHERE [name] = @table_name )
  AND colid IN (
  SELECT SIK.colid 
  FROM sysindexkeys SIK JOIN sysobjects SO ON SIK.[id] = SO.[id]
  WHERE SIK.indid = 1 AND SO.[name] = @table_name )



---AGREGANDO UNA LLAVE DE CLAVE FORANEA PARA ESTABLER 
----LA RELACION ENTRE LA TABLA PRODUCTO Y CATEGORIA
----LA CLAVE FORANEA SE AGREGA EN LA TABLA PRODUCTO
ALTER TABLE PRODUCTO
ADD FOREIGN KEY (COD_CATEGORIA) REFERENCES CATEGORIA
GO

---RELACIONANDO LA TABLA PRODUCTO CON LA TABLA DETALLE_BOLETA
ALTER TABLE DETALLE_BOLETA
ADD FOREIGN KEY(ID_PRODUCTO)REFERENCES PRODUCTO
GO

